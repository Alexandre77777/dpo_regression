import streamlit as st
import requests

st.title('üè† –ü—Ä–æ–≥–Ω–æ–∑ —Ü–µ–Ω—ã –Ω–∞ –∂–∏–ª—å—ë –≤ –ö–∞–ª–∏—Ñ–æ—Ä–Ω–∏–∏')

st.markdown("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ–º–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–≥–Ω–æ–∑–∞ —Ü–µ–Ω—ã:")

# –û—Ä–≥–∞–Ω–∏–∑—É–µ–º –ø–æ–ª—è –≤–≤–æ–¥–∞ –≤ –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è –∫–æ–º–ø–∞–∫—Ç–Ω–æ—Å—Ç–∏
col1, col2 = st.columns(2)

with col1:
    MedInc = st.number_input(
        "–ú–µ–¥–∏–∞–Ω–Ω—ã–π –¥–æ—Ö–æ–¥ (–≤ –¥–µ—Å—è—Ç–∫–∞—Ö —Ç—ã—Å—è—á $):",
        min_value=0.0, max_value=15.0, value=5.0, step=0.1
    )
    HouseAge = st.number_input(
        "–í–æ–∑—Ä–∞—Å—Ç –¥–æ–º–∞ (–ª–µ—Ç):",
        min_value=1, max_value=52, value=20, step=1
    )
    AveRooms = st.number_input(
        "–°—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç:",
        min_value=1.0, max_value=15.0, value=5.0, step=1.0
    )
    AveBedrms = st.number_input(
        "–°—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ø–∞–ª–µ–Ω:",
        min_value=1.0, max_value=5.0, value=1.0, step=1.0
    )

with col2:
    Population = st.number_input(
        "–ù–∞—Å–µ–ª–µ–Ω–∏–µ —Ä–∞–π–æ–Ω–∞:",
        min_value=1, max_value=40000, value=1000, step=1
    )
    AveOccup = st.number_input(
        "–°—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∂–∏–ª—å—Ü–æ–≤:",
        min_value=1.0, max_value=1243.0, value=3.0, step=0.1
    )
    Latitude = st.number_input(
        "–®–∏—Ä–æ—Ç–∞:",
        min_value=32.0, max_value=42.0, value=36.0, step=0.01
    )
    Longitude = st.number_input(
        "–î–æ–ª–≥–æ—Ç–∞:",
        min_value=-124.0, max_value=-114.0, value=-120.0, step=0.01
    )

if st.button("–ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥–Ω–æ–∑"):
    data = {
        "MedInc": MedInc,
        "HouseAge": HouseAge,
        "AveRooms": AveRooms,
        "AveBedrms": AveBedrms,
        "Population": Population,
        "AveOccup": AveOccup,
        "Latitude": Latitude,
        "Longitude": Longitude
    }
    url = 'https://dpo-regression.onrender.com/predict'
    response = requests.post(url, json=data)

    if response.status_code == 200:
        try:
            data = response.json()
            prediction = data.get('prediction')
            if prediction is not None:
                st.success(f'üí∞ **–ü—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ–º–∞—è —Ü–µ–Ω–∞: {prediction * 1000:.2f}$**')
            else:
                st.error("–û—à–∏–±–∫–∞: –û—Ç–≤–µ—Ç API –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–æ–≥–Ω–æ–∑.")
        except ValueError:
            st.error("–û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç API.")
    else:
        st.error(f"–û—à–∏–±–∫–∞: API –≤–µ—Ä–Ω—É–ª —Å—Ç–∞—Ç—É—Å {response.status_code}.")